<?php

/**
 * BaseOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $idorders
 * @property string $number
 * @property integer $payment
 * @property integer $orderStatus
 * @property timestamp $addDate
 * @property timestamp $sendDate
 * @property decimal $packingCost
 * @property decimal $shippingCost
 * @property tinyint $sendReceipt
 * @property tinyint $sendInfo
 * @property string $note
 * @property integer $client_id
 * @property Client $Client
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrder extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('orders');
        $this->hasColumn('idorders', 'integer', null, array(
             'primary' => true,
             'unsigned' => true,
             'autoincrement' => true,
             'type' => 'integer',
             ));
        $this->hasColumn('number', 'string', 15, array(
             'type' => 'string',
             'length' => '15',
             ));
        $this->hasColumn('payment', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('orderStatus', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('addDate', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('sendDate', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        $this->hasColumn('packingCost', 'decimal', null, array(
             'type' => 'decimal',
             ));
        $this->hasColumn('shippingCost', 'decimal', null, array(
             'type' => 'decimal',
             ));
        $this->hasColumn('sendReceipt', 'tinyint', 1, array(
             'type' => 'tinyint',
             'length' => '1',
             ));
        $this->hasColumn('sendInfo', 'tinyint', 1, array(
             'type' => 'tinyint',
             'length' => '1',
             ));
        $this->hasColumn('note', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('client_id', 'integer', null, array(
             'unsigned' => true,
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Client', array(
             'local' => 'client_id',
             'foreign' => 'idclients'));
    }
}